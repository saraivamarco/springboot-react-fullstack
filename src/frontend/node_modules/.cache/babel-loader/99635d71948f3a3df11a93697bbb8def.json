{"ast":null,"code":"var _jsxFileName = \"/Users/marcosaraivadasilva/Documents/Workspace/demo 2/src/frontend/src/StudentDrawerForm.js\",\n    _s = $RefreshSig$();\n\nimport { Drawer, Input, Col, Select, Form, Row, Button, Spin } from 'antd';\nimport { addNewStudent } from \"./client\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { successNotification, errorNotification } from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 17\n}, this);\n\nfunction StudentDrawerForm({\n  showDrawer,\n  setShowDrawer,\n  fetchStudents\n}) {\n  _s();\n\n  const onCLose = () => setShowDrawer(false);\n\n  const [submitting, setSubmitting] = useState(false);\n\n  const onFinish = student => {\n    setSubmitting(true);\n    console.log(JSON.stringify(student, null, 2));\n    addNewStudent(student).then(() => {\n      console.log(\"student added\");\n      onCLose();\n      fetchStudents();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setSubmitting(false);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    alert(JSON.stringify(errorInfo, null, 2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    title: \"Create new student\",\n    width: 720,\n    onClose: onCLose,\n    visible: showDrawer,\n    bodyStyle: {\n      paddingBottom: 80\n    },\n    footer: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onCLose,\n        style: {\n          marginRight: 8\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      onFinishFailed: onFinishFailed,\n      onFinish: onFinish,\n      hideRequiredMark: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"name\",\n            label: \"Name\",\n            rules: [{\n              required: true,\n              message: 'Please enter student name'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Please enter student name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"email\",\n            label: \"Email\",\n            rules: [{\n              required: true,\n              message: 'Please enter student email'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Please enter student email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"gender\",\n            label: \"gender\",\n            rules: [{\n              required: true,\n              message: 'Please select a gender'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Please select a gender\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"MALE\",\n                children: \"MALE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"FEMALE\",\n                children: \"FEMALE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"OTHER\",\n                children: \"OTHER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: submitting && /*#__PURE__*/_jsxDEV(Spin, {\n          indicator: antIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n\n_s(StudentDrawerForm, \"w831ZXNpNPeUBKV0zr4u2iKSLuA=\");\n\n_c = StudentDrawerForm;\nexport default StudentDrawerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentDrawerForm\");","map":{"version":3,"sources":["/Users/marcosaraivadasilva/Documents/Workspace/demo 2/src/frontend/src/StudentDrawerForm.js"],"names":["Drawer","Input","Col","Select","Form","Row","Button","Spin","addNewStudent","LoadingOutlined","useState","successNotification","errorNotification","Option","antIcon","fontSize","StudentDrawerForm","showDrawer","setShowDrawer","fetchStudents","onCLose","submitting","setSubmitting","onFinish","student","console","log","JSON","stringify","then","catch","err","finally","onFinishFailed","errorInfo","alert","paddingBottom","textAlign","marginRight","required","message"],"mappings":"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","sourcesContent":["import {Drawer, Input, Col, Select, Form, Row, Button, Spin} from 'antd';\n\nimport {addNewStudent} from \"./client\";\nimport {LoadingOutlined} from \"@ant-design/icons\";\nimport {useState} from \"react\";\nimport {successNotification, errorNotification} from \"./Notification\";\n\n\nconst {Option} = Select;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction StudentDrawerForm({showDrawer, setShowDrawer, fetchStudents}) {\n\n    const onCLose = () => setShowDrawer(false);\n    const [submitting, setSubmitting] = useState(false);\n\n    const onFinish = student => {\n        setSubmitting(true);\n        console.log(JSON.stringify(student, null, 2));\n        addNewStudent(student)\n            .then(() => {\n                console.log(\"student added\");\n                onCLose();\n                fetchStudents();\n            }).catch(err => {\n                console.log(err);\n            }).finally(() => {\n                setSubmitting(false);\n        })\n    };\n\n    const onFinishFailed = errorInfo => {\n        alert(JSON.stringify(errorInfo, null, 2));\n    };\n\n    return <Drawer\n        title=\"Create new student\"\n        width={720}\n        onClose={onCLose}\n        visible={showDrawer}\n        bodyStyle={{paddingBottom: 80}}\n        footer={\n            <div style={{\n                    textAlign: 'right',\n                }}>\n                <Button onClick={onCLose} style={{marginRight: 8}}>\n                    Cancel\n                </Button>\n            </div>\n        }\n    >\n        <Form layout=\"vertical\"\n              onFinishFailed={onFinishFailed}\n              onFinish={onFinish}\n              hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{required: true, message: 'Please enter student name'}]}\n                    >\n                        <Input placeholder=\"Please enter student name\"/>\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{required: true, message: 'Please enter student email'}]}\n                    >\n                        <Input placeholder=\"Please enter student email\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"gender\"\n                        rules={[{required: true, message: 'Please select a gender'}]}\n                    >\n                        <Select placeholder=\"Please select a gender\">\n                            <Option value=\"MALE\">MALE</Option>\n                            <Option value=\"FEMALE\">FEMALE</Option>\n                            <Option value=\"OTHER\">OTHER</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={12}>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                {submitting && <Spin indicator={antIcon} />}\n            </Row>\n        </Form>\n    </Drawer>\n}\n\nexport default StudentDrawerForm;"]},"metadata":{},"sourceType":"module"}