[{"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/index.js":"1","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/reportWebVitals.js":"2","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/App.js":"3","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/client.js":"4","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/StudentDrawerForm.js":"5","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/Notification.js":"6"},{"size":500,"mtime":1625521501257,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1625521501257,"results":"9","hashOfConfig":"8"},{"size":7004,"mtime":1629236811002,"results":"10","hashOfConfig":"8"},{"size":756,"mtime":1628624365099,"results":"11","hashOfConfig":"8"},{"size":4080,"mtime":1628668408915,"results":"12","hashOfConfig":"8"},{"size":796,"mtime":1628666936171,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dg3kyi",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/index.js",[],"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/reportWebVitals.js",[],"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/App.js",["27","28","29","30"],"import {Table, Tag, Space, Empty, Spin, Button, Radio, Popconfirm} from 'antd';\n\nimport {useState, useEffect} from 'react'\nimport {getAllStudents, deleteStudent, addNewStudent} from \"./client\";\nimport {Layout, Menu, Breadcrumb} from 'antd';\nimport {\n    DesktopOutlined,\n    PieChartOutlined,\n    FileOutlined,\n    TeamOutlined,\n    UserOutlined,\n    LoadingOutlined, DownloadOutlined, PlusOutlined,\n} from '@ant-design/icons';\n\nimport './App.css';\n\nimport StudentDrawerForm from \"./StudentDrawerForm\";\nimport Avatar from \"antd/es/avatar/avatar\";\nimport {errorNotification, successNotification} from \"./Notification\";\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\nconst TheAvatar = ({name}) => {\n    let trim = name.trim();\n    if (name.trim().length === 0) {\n        return <Avatar icon={<UserOutlined/>}/>\n    }\n    const split = trim.split(\" \");\n    if (split.length === 1){\n        return <Avatar>{name.charAt(0)}</Avatar>\n    }\n    return <Avatar>\n        {`${name.charAt(0)}${name.charAt(name.length-1)}`}\n    </Avatar>\n}\n\nconst removeStudent = (studentId, callback) => {\n    deleteStudent(studentId).then(() => {\n        successNotification(\"Student deleted\", `Student ${studentId} was deleted`)\n        callback();\n    }).catch(err => {\n        err.response.json().then(res => {\n            console.log(res);\n            errorNotification(\n                \"There was an issue\",\n                `${res.message} [statusCode:${res.status}] [${res.error}]`\n            );\n        });\n    });\n}\n\n\nconst columns = fetchStudents => [\n    {\n        title: '',\n        dataIndex: 'avatar',\n        key: 'avatar',\n        render: (text, student) =>\n            <TheAvatar name={student.name}/>\n    },\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n    },\n    {\n        title: 'Actions',\n        key: 'actions',\n        render: (text, student) =>\n            <Radio.Group >\n                <Popconfirm\n                    placement='topRight'\n                    title={`Are you sure you want to delete ${student.name}`}\n                    onConfirm={() => removeStudent(student.id, fetchStudents)}\n                    onText='Yes'\n                    canceltext='No'>\n                    <Radio.Button value=\"small\">Delete</Radio.Button>\n                </Popconfirm>\n                <Radio.Button value=\"small\">Edit</Radio.Button>\n            </Radio.Group>\n    },\n\n];\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction App() {\n    const [collapsed, setCollapsed] = useState(false)\n    const [students, setStudents] = useState([]);\n    const [fetching, setFetching] = useState(true);\n    const [showDrawer, setShowDrawer] = useState(false);\n    const fetchStudents = () =>\n        getAllStudents()\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            setStudents(data);\n        }).catch(err => {\n            console.log(err.response);\n            err.response.json().then(res => {\n                console.log(res);\n                errorNotification(\n                    \"There was an issue\",\n                    `${res.message} [statusCode:${res.status}] [${res.error}]`\n                );\n            });\n        }).finally(() => setFetching(false));\n\n    useEffect(() => {\n        console.log(\"component is mounted\");\n        fetchStudents();\n    }, []);\n\n    const renderStudents = () => {\n        if(fetching) {\n            return <Spin indicator={antIcon}/>\n        }\n        if (students.length <= 0) {\n            return <>\n                    <StudentDrawerForm\n                        showDrawer = {showDrawer}\n                        setShowDrawer={setShowDrawer}\n                        fetchStudents={fetchStudents}\n                    />\n                    <Button\n                        onClick={() => setShowDrawer(!showDrawer)}\n                        type=\"primary\" shape=\"round\" icon={<PlusOutlined />} size=\"small\">\n                        Add New Student\n                    </Button>\n                    <Empty/>\n                </>\n\n        }\n        return <>\n            <StudentDrawerForm\n                showDrawer = {showDrawer}\n                setShowDrawer={setShowDrawer}\n                fetchStudents={fetchStudents}\n            />\n            <Table\n                dataSource={students}\n                columns={columns(fetchStudents)}\n                bordered\n                title={()=>\n                        <Button\n                            onClick={() => setShowDrawer(!showDrawer)}\n                            type=\"primary\" shape=\"round\" icon={<PlusOutlined />} size=\"small\">\n                                      Add New Student\n                        </Button>\n                      }\n                pagination={{pageSize:400}}\n                scroll={{y:500}}\n                rowKey={(student) => student.id}\n            />\n        </>\n    }\n\n    return <Layout style={{minHeight: '100vh'}}>\n        <Sider collapsible collapsed={collapsed}\n               onCollapse={setCollapsed}>\n            <div className=\"logo\"/>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\n                    Option 1\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\n                    Option 2\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"User\">\n                    <Menu.Item key=\"3\">Tom</Menu.Item>\n                    <Menu.Item key=\"4\">Bill</Menu.Item>\n                    <Menu.Item key=\"5\">Alex</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined/>} title=\"Team\">\n                    <Menu.Item key=\"6\">Team 1</Menu.Item>\n                    <Menu.Item key=\"8\">Team 2</Menu.Item>\n                </SubMenu>\n                <Menu.Item key=\"9\" icon={<FileOutlined/>}>\n                    Files\n                </Menu.Item>\n            </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{padding: 0}}/>\n            <Content style={{margin: '0 16px'}}>\n                <Breadcrumb style={{margin: '16px 0'}}>\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\n                    {renderStudents()}\n                </div>\n            </Content>\n            <Footer style={{textAlign: 'center'}}>By Marco Saraiva da Silva</Footer>\n        </Layout>\n    </Layout>\n}\n\n    export default App;\n\n","/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/client.js",[],"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/StudentDrawerForm.js",[],"/Users/marcosaraivadasilva/Documents/Workspace/fullstack_springboot_react/src/frontend/src/Notification.js",[],{"ruleId":"31","severity":1,"message":"32","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":19},{"ruleId":"31","severity":1,"message":"35","line":1,"column":21,"nodeType":"33","messageId":"34","endLine":1,"endColumn":26},{"ruleId":"31","severity":1,"message":"36","line":4,"column":40,"nodeType":"33","messageId":"34","endLine":4,"endColumn":53},{"ruleId":"31","severity":1,"message":"37","line":12,"column":22,"nodeType":"33","messageId":"34","endLine":12,"endColumn":38},"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'addNewStudent' is defined but never used.","'DownloadOutlined' is defined but never used."]